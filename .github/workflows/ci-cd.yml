name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - development
  pull_request:

jobs:
  # Build Stage
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: yarn install

      - name: Build Project
        run: yarn build

      - name: Build Docker Image
        run: docker build -t jrdnbrj/devops:${{ github.sha }} .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Push Docker image to Docker Hub
        run: docker push jrdnbrj/devops:${{ github.sha }}

  # Test Stage
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: yarn install

      - name: Run Lint
        run: yarn lint

      - name: Run Tests
        run: yarn test

  # Deploy Stage
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install doctl
        run: |
          sudo snap install doctl
        
      - name: Authenticate with DigitalOcean
        run: doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up Kubeconfig for DigitalOcean
        run: doctl kubernetes cluster kubeconfig save c0bd3093-42ae-474d-96aa-539c3b0b7281
          
      - name: Deploy to Kubernetes
        run: |
          sed -i 's|image: jrdnbrj/devops:.*|image: jrdnbrj/devops:${{ github.sha }}|' k8s/deployment.yaml

          kubectl apply -f k8s/redis-deployment.yaml
          kubectl apply -f k8s/postgres-deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/hpa.yaml
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/configmap.yaml